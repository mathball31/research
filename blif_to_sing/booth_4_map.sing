ring r = 0, (Z, A, B, c_0, c_1, c_2, c_3, c_4, c_5, c_6, c_7, n158, n156, n157, n144, n139, n138, n137, n143, n141, n140, n142, n154, n153, n152, n151, n147, n146, n150, n149, n166, n165, n145, n164, n163, n160, n159, n162, n148, n161, n115, n113, n114, n92, n90, n88, n87, n86, n84, n83, n82, n85, n89, n91, n111, n102, n100, n99, n94, n93, n98, n96, n95, n97, n101, n110, n109, n108, n107, n106, n135, n129, n127, n126, n121, n120, n117, n116, n119, n118, n125, n122, n124, n123, n81, n80, n128, n79, n134, n133, n103, n132, n131, n105, n130, n104, n53, n41, n38, n36, n40, n51, n49, n48, n42, n47, n46, n50, n77, n66, n63, n62, n60, n59, n56, n55, n54, n58, n57, n61, n65, n64, n39, n35, n33, n34, n37, n76, n74, n73, n67, n45, n43, n72, n68, n71, n70, n44, n75, n69, n30, n20, n29, n23, n22, n21, n28, n24, n27, n26, n25, n31, n19, n18, a_0, a_1, a_2, a_3, b_0, b_1, b_2, b_3), lp;

poly fZ = -Z + 1*c_0 + 2*c_1 + 4*c_2 + 8*c_3 + 16*c_4 + 32*c_5 + 64*c_6 - 128*c_7;
poly fA = -A + 1*a_0 + 2*a_1 + 4*a_2 - 8*a_3;
poly fB = -B + 1*b_0 + 2*b_1 + 4*b_2 - 8*b_3;
// AND2X1
poly f0 = -c_0 + b_0*a_0;
// OR2X1
poly f1 = -c_1 + n31 + n30 - n31*n30;
// XOR2X1
poly f2 = -c_2 + n51 + n41 - 2*n51*n41;
// XOR2X1
poly f3 = -c_3 + n77 + n53 - 2*n77*n53;
// XOR2X1
poly f4 = -c_4 + n111 + n92 - 2*n111*n92;
// XOR2X1
poly f5 = -c_5 + n135 + n115 - 2*n135*n115;
// XOR2X1
poly f6 = -c_6 + n154 + n144 - 2*n154*n144;
// XOR2X1
poly f7 = -c_7 + n166 + n158 - 2*n166*n158;
// OR2X1
poly f8 = -n158 + n157 + n156 - n157*n156;
// AND2X1
poly f9 = -n156 + n153*n133;
// AND2X1
poly f10 = -n157 + n154*n144;
// OR2X1
poly f11 = -n144 + n143 + n139 - n143*n139;
// AND2X1
poly f12 = -n139 + n138*n92;
// AND2X1
poly f13 = -n138 + n137*n111;
// XOR2X1
poly f14 = -n137 + n134 + n129 - 2*n134*n129;
// OR2X1
poly f15 = -n143 + n142 + n141 - n142*n141;
// AND2X1
poly f16 = -n141 + n133*n140;
// INVX1
poly f17 = -n140 + 1 - n129;
// AND2X1
poly f18 = -n142 + n135*n113;
// XOR2X1
poly f19 = -n154 + n153 + n133 - 2*n153*n133;
// OR2X1
poly f20 = -n153 + n152 + n145 - n152*n145;
// AND2X1
poly f21 = -n152 + n151*n79;
// OR2X1
poly f22 = -n151 + n150 + n147 - n150*n147;
// AND2X1
poly f23 = -n147 + n146*n82;
// INVX1
poly f24 = -n146 + 1 - n71;
// OR2X1
poly f25 = -n150 + n149 + n148 - n149*n148;
// AND2X1
poly f26 = -n149 + n104*n36;
// XOR2X1
poly f27 = -n166 + n165 + n133 - 2*n165*n133;
// OR2X1
poly f28 = -n165 + n164 + n145 - n164*n145;
// INVX1
poly f29 = -n145 + 1 - n128;
// AND2X1
poly f30 = -n164 + n163*n79;
// OR2X1
poly f31 = -n163 + n162 + n160 - n162*n160;
// AND2X1
poly f32 = -n160 + n159*n104;
// INVX1
poly f33 = -n159 + 1 - n120;
// OR2X1
poly f34 = -n162 + n161 + n148 - n161*n148;
// AND2X1
poly f35 = -n148 + n81*a_3;
// AND2X1
poly f36 = -n161 + n104*n82;
// OR2X1
poly f37 = -n115 + n114 + n113 - n114*n113;
// AND2X1
poly f38 = -n113 + n110*n102;
// AND2X1
poly f39 = -n114 + n111*n92;
// OR2X1
poly f40 = -n92 + n91 + n90 - n91*n90;
// AND2X1
poly f41 = -n90 + n89*n88;
// OR2X1
poly f42 = -n88 + n64 + n87 - n64*n87;
// AND2X1
poly f43 = -n87 + n86*n79;
// OR2X1
poly f44 = -n86 + n85 + n84 - n85*n84;
// AND2X1
poly f45 = -n84 + n83*a_0;
// OR2X1
poly f46 = -n83 + n82 + n81 - n82*n81;
// INVX1
poly f47 = -n82 + 1 - n58;
// INVX1
poly f48 = -n85 + 1 - n61;
// INVX1
poly f49 = -n89 + 1 - n76;
// AND2X1
poly f50 = -n91 + n77*n53;
// XOR2X1
poly f51 = -n111 + n110 + n102 - 2*n110*n102;
// OR2X1
poly f52 = -n102 + n101 + n100 - n101*n100;
// AND2X1
poly f53 = -n100 + n99*n79;
// OR2X1
poly f54 = -n99 + n98 + n94 - n98*n94;
// INVX1
poly f55 = -n94 + 1 - n93;
// OR2X1
poly f56 = -n93 + n45 + n35 - n45*n35;
// OR2X1
poly f57 = -n98 + n97 + n96 - n97*n96;
// INVX1
poly f58 = -n96 + 1 - n95;
// OR2X1
poly f59 = -n95 + n58 + n26 - n58*n26;
// AND2X1
poly f60 = -n97 + n81*a_1;
// AND2X1
poly f61 = -n101 + n39*a_2;
// OR2X1
poly f62 = -n110 + n109 + n103 - n109*n103;
// AND2X1
poly f63 = -n109 + n108*n20;
// OR2X1
poly f64 = -n108 + n107 + n105 - n107*n105;
// INVX1
poly f65 = -n107 + 1 - n106;
// OR2X1
poly f66 = -n106 + n71 + n21 - n71*n21;
// XOR2X1
poly f67 = -n135 + n134 + n129 - 2*n134*n129;
// AND2X1
poly f68 = -n129 + n128*n127;
// OR2X1
poly f69 = -n127 + n126 + n39 - n126*n39;
// AND2X1
poly f70 = -n126 + n125*n121;
// OR2X1
poly f71 = -n121 + n120 + n71 - n120*n71;
// AND2X1
poly f72 = -n120 + n119*n117;
// OR2X1
poly f73 = -n117 + n116 + n33 - n116*n33;
// OR2X1
poly f74 = -n116 + n54 + b_1 - n54*b_1;
// OR2X1
poly f75 = -n119 + n118 + n33 - n118*n33;
// OR2X1
poly f76 = -n118 + b_2 + n18 - b_2*n18;
// AND2X1
poly f77 = -n125 + n124*n122;
// OR2X1
poly f78 = -n122 + n58 + n45 - n58*n45;
// INVX1
poly f79 = -n124 + 1 - n123;
// AND2X1
poly f80 = -n123 + n81*a_2;
// AND2X1
poly f81 = -n81 + n80*n33;
// AND2X1
poly f82 = -n80 + b_2*b_1;
// OR2X1
poly f83 = -n128 + n79 + n69 - n79*n69;
// INVX1
poly f84 = -n79 + 1 - n39;
// INVX1
poly f85 = -n134 + 1 - n133;
// OR2X1
poly f86 = -n133 + n132 + n103 - n132*n103;
// INVX1
poly f87 = -n103 + 1 - n75;
// AND2X1
poly f88 = -n132 + n131*n20;
// OR2X1
poly f89 = -n131 + n130 + n105 - n130*n105;
// AND2X1
poly f90 = -n105 + n104*n24;
// AND2X1
poly f91 = -n130 + n104*n22;
// AND2X1
poly f92 = -n104 + n70*n69;
// AND2X1
poly f93 = -n53 + n51*n41;
// OR2X1
poly f94 = -n41 + n40 + n38 - n40*n38;
// AND2X1
poly f95 = -n38 + n36*a_0;
// INVX1
poly f96 = -n36 + 1 - n35;
// AND2X1
poly f97 = -n40 + n39*a_0;
// OR2X1
poly f98 = -n51 + n50 + n49 - n50*n49;
// AND2X1
poly f99 = -n49 + n48*n20;
// OR2X1
poly f100 = -n48 + n47 + n42 - n47*n42;
// AND2X1
poly f101 = -n42 + n27*n22;
// AND2X1
poly f102 = -n47 + n46*n24;
// INVX1
poly f103 = -n46 + 1 - n45;
// AND2X1
poly f104 = -n50 + n19*a_2;
// XOR2X1
poly f105 = -n77 + n76 + n66 - 2*n76*n66;
// AND2X1
poly f106 = -n66 + n65*n63;
// OR2X1
poly f107 = -n63 + n62 + n39 - n62*n39;
// AND2X1
poly f108 = -n62 + n61*n60;
// OR2X1
poly f109 = -n60 + n59 + n25 - n59*n25;
// AND2X1
poly f110 = -n59 + n58*n56;
// OR2X1
poly f111 = -n56 + n55 + b_3 - n55*b_3;
// OR2X1
poly f112 = -n55 + n54 + n18 - n54*n18;
// INVX1
poly f113 = -n54 + 1 - b_2;
// OR2X1
poly f114 = -n58 + n57 + n33 - n57*n33;
// OR2X1
poly f115 = -n57 + b_2 + b_1 - b_2*b_1;
// OR2X1
poly f116 = -n61 + n35 + n26 - n35*n26;
// INVX1
poly f117 = -n65 + 1 - n64;
// AND2X1
poly f118 = -n64 + n39*a_1;
// AND2X1
poly f119 = -n39 + n37*n35;
// OR2X1
poly f120 = -n35 + n34 + n33 - n34*n33;
// INVX1
poly f121 = -n33 + 1 - b_3;
// XOR2X1
poly f122 = -n34 + b_2 + n18 - 2*b_2*n18;
// XOR2X1
poly f123 = -n37 + b_2 + b_1 - 2*b_2*b_1;
// AND2X1
poly f124 = -n76 + n75*n74;
// OR2X1
poly f125 = -n74 + n73 + n19 - n73*n19;
// AND2X1
poly f126 = -n73 + n72*n67;
// OR2X1
poly f127 = -n67 + n45 + n21 - n45*n21;
// XOR2X1
poly f128 = -n45 + n44 + n43 - 2*n44*n43;
// INVX1
poly f129 = -n43 + 1 - a_2;
// OR2X1
poly f130 = -n72 + n71 + n68 - n71*n68;
// INVX1
poly f131 = -n68 + 1 - n24;
// XOR2X1
poly f132 = -n71 + n70 + n69 - 2*n70*n69;
// OR2X1
poly f133 = -n70 + n44 + a_2 - n44*a_2;
// OR2X1
poly f134 = -n44 + a_1 + a_0 - a_1*a_0;
// OR2X1
poly f135 = -n75 + n20 + n69 - n20*n69;
// INVX1
poly f136 = -n69 + 1 - a_3;
// AND2X1
poly f137 = -n30 + n29*n20;
// INVX1
poly f138 = -n20 + 1 - n19;
// OR2X1
poly f139 = -n29 + n28 + n23 - n28*n23;
// AND2X1
poly f140 = -n23 + n22*a_0;
// INVX1
poly f141 = -n22 + 1 - n21;
// OR2X1
poly f142 = -n21 + n18 + b_0 - n18*b_0;
// AND2X1
poly f143 = -n28 + n27*n24;
// AND2X1
poly f144 = -n24 + b_1*b_0;
// INVX1
poly f145 = -n27 + 1 - n26;
// XOR2X1
poly f146 = -n26 + a_1 + n25 - 2*a_1*n25;
// INVX1
poly f147 = -n25 + 1 - a_0;
// AND2X1
poly f148 = -n31 + n19*a_1;
// AND2X1
poly f149 = -n19 + n18*b_0;
// INVX1
poly f150 = -n18 + 1 - b_1;
// INPUT
poly fa_0 = a_0^2 - a_0;
// INPUT
poly fa_1 = a_1^2 - a_1;
// INPUT
poly fa_2 = a_2^2 - a_2;
// INPUT
poly fa_3 = a_3^2 - a_3;
// INPUT
poly fb_0 = b_0^2 - b_0;
// INPUT
poly fb_1 = b_1^2 - b_1;
// INPUT
poly fb_2 = b_2^2 - b_2;
// INPUT
poly fb_3 = b_3^2 - b_3;
ideal J = (fZ, fA, fB, f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54, f55, f56, f57, f58, f59, f60, f61, f62, f63, f64, f65, f66, f67, f68, f69, f70, f71, f72, f73, f74, f75, f76, f77, f78, f79, f80, f81, f82, f83, f84, f85, f86, f87, f88, f89, f90, f91, f92, f93, f94, f95, f96, f97, f98, f99, f100, f101, f102, f103, f104, f105, f106, f107, f108, f109, f110, f111, f112, f113, f114, f115, f116, f117, f118, f119, f120, f121, f122, f123, f124, f125, f126, f127, f128, f129, f130, f131, f132, f133, f134, f135, f136, f137, f138, f139, f140, f141, f142, f143, f144, f145, f146, f147, f148, f149, f150);
ideal J0 = (a_3^2 - a_3, a_2^2 - a_2, a_1^2 - a_1, a_0^2 - a_0, n38^2 - n38, n39^2 - n39, n30^2 - n30, n31^2 - n31, n33^2 - n33, n34^2 - n34, n35^2 - n35, n36^2 - n36, n37^2 - n37, n132^2 - n132, n133^2 - n133, n130^2 - n130, n131^2 - n131, n137^2 - n137, n134^2 - n134, n135^2 - n135, n138^2 - n138, n139^2 - n139, n85^2 - n85, n84^2 - n84, n87^2 - n87, n86^2 - n86, n81^2 - n81, n80^2 - n80, n83^2 - n83, n82^2 - n82, n89^2 - n89, n88^2 - n88, n129^2 - n129, n128^2 - n128, n125^2 - n125, n124^2 - n124, n127^2 - n127, n126^2 - n126, n121^2 - n121, n120^2 - n120, n123^2 - n123, n122^2 - n122, n18^2 - n18, n19^2 - n19, n98^2 - n98, n99^2 - n99, n92^2 - n92, n93^2 - n93, n90^2 - n90, n91^2 - n91, n96^2 - n96, n97^2 - n97, n94^2 - n94, n95^2 - n95, n158^2 - n158, n159^2 - n159, n150^2 - n150, n151^2 - n151, n152^2 - n152, n153^2 - n153, n154^2 - n154, n156^2 - n156, n157^2 - n157, n67^2 - n67, n66^2 - n66, n65^2 - n65, n64^2 - n64, n63^2 - n63, n62^2 - n62, n61^2 - n61, n60^2 - n60, n69^2 - n69, n68^2 - n68, n149^2 - n149, n148^2 - n148, n143^2 - n143, n142^2 - n142, n141^2 - n141, n140^2 - n140, n147^2 - n147, n146^2 - n146, n145^2 - n145, n144^2 - n144, n74^2 - n74, n75^2 - n75, n76^2 - n76, n77^2 - n77, n70^2 - n70, n71^2 - n71, n72^2 - n72, n73^2 - n73, n79^2 - n79, c_1^2 - c_1, c_0^2 - c_0, c_3^2 - c_3, c_2^2 - c_2, c_5^2 - c_5, c_4^2 - c_4, c_7^2 - c_7, c_6^2 - c_6, b_0^2 - b_0, b_1^2 - b_1, b_2^2 - b_2, b_3^2 - b_3, n49^2 - n49, n48^2 - n48, n41^2 - n41, n40^2 - n40, n43^2 - n43, n42^2 - n42, n45^2 - n45, n44^2 - n44, n47^2 - n47, n46^2 - n46, n161^2 - n161, n160^2 - n160, n163^2 - n163, n162^2 - n162, n165^2 - n165, n164^2 - n164, n166^2 - n166, n58^2 - n58, n59^2 - n59, n56^2 - n56, n57^2 - n57, n54^2 - n54, n55^2 - n55, n53^2 - n53, n50^2 - n50, n51^2 - n51, n114^2 - n114, n115^2 - n115, n116^2 - n116, n117^2 - n117, n110^2 - n110, n111^2 - n111, n113^2 - n113, n118^2 - n118, n119^2 - n119, n29^2 - n29, n28^2 - n28, n23^2 - n23, n22^2 - n22, n21^2 - n21, n20^2 - n20, n27^2 - n27, n26^2 - n26, n25^2 - n25, n24^2 - n24, n107^2 - n107, n106^2 - n106, n105^2 - n105, n104^2 - n104, n103^2 - n103, n102^2 - n102, n101^2 - n101, n100^2 - n100, n109^2 - n109, n108^2 - n108);
poly f_spec =Z-A*B;
reduce(f_spec, J + J0);
