ring r = 0, (Z, A, B, m00, m01, m02, m03, m04, m05, m06, m07, m08, m09, m10, m11, m12, m13, m14, m15, n350, n351, n343, n341, n342, n348, n346, n344, n345, n347, n328, n326, n327, n307, n305, n306, n324, n322, n323, n339, n337, n331, n329, n330, n310, n308, n309, n321, n319, n320, n336, n334, n332, n333, n313, n311, n312, n318, n316, n314, n315, n317, n335, n338, n280, n278, n279, n247, n245, n246, n210, n208, n209, n169, n166, n167, n206, n204, n205, n243, n241, n242, n276, n274, n275, n303, n301, n283, n281, n282, n250, n248, n249, n213, n211, n212, n172, n170, n171, n132, n129, n130, n165, n163, n164, n203, n201, n202, n240, n238, n239, n273, n271, n272, n300, n298, n286, n284, n285, n253, n251, n252, n216, n214, n215, n175, n173, n174, n135, n133, n134, n101, n98, n99, n128, n126, n127, n162, n160, n161, n200, n198, n199, n237, n235, n236, n270, n268, n269, n297, n295, n289, n287, n288, n256, n254, n255, n219, n217, n218, n178, n176, n177, n138, n136, n137, n104, n102, n103, n76, n73, n74, n97, n95, n96, n125, n123, n124, n159, n157, n158, n197, n195, n196, n234, n232, n233, n267, n265, n266, n294, n292, n290, n291, n259, n257, n258, n222, n220, n221, n181, n179, n180, n141, n139, n140, n107, n105, n106, n79, n77, n78, n57, n54, n55, n72, n70, n71, n94, n92, n93, n122, n120, n121, n156, n154, n155, n194, n192, n193, n231, n229, n230, n264, n262, n260, n261, n225, n223, n224, n184, n182, n183, n144, n142, n143, n110, n108, n109, n82, n80, n81, n60, n58, n59, n44, n41, n42, n53, n51, n52, n69, n67, n68, n91, n89, n90, n119, n117, n118, n153, n151, n152, n191, n189, n190, n228, n226, n187, n185, n186, n147, n145, n146, n113, n111, n112, n85, n83, n84, n63, n61, n62, n47, n45, n46, n37, n34, n35, n40, n38, n39, n50, n48, n49, n66, n64, n65, n88, n86, n87, n116, n114, n115, n150, n148, n149, n188, n227, n263, n293, n296, n299, n302, a0, a1, a2, a3, a4, a5, a6, a7, b0, b1, b2, b3, b4, b5, b6, b7), lp;

poly fZ = -Z + 1*m00 + 2*m01 + 4*m02 + 8*m03 + 16*m04 + 32*m05 + 64*m06 + 128*m07 + 256*m08 + 512*m09 + 1024*m10 + 2048*m11 + 4096*m12 + 8192*m13 + 16384*m14 + 32768*m15;
poly fA = -A + 1*a0 + 2*a1 + 4*a2 + 8*a3 + 16*a4 + 32*a5 + 64*a6 + 128*a7;
poly fB = -B + 1*b0 + 2*b1 + 4*b2 + 8*b3 + 16*b4 + 32*b5 + 64*b6 + 128*b7;
// AND2X1
poly f0 = -m00 + b0*a0;
// XOR2X1
poly f1 = -m01 + n35 + n34 - 2*n35*n34;
// XOR2X1
poly f2 = -m02 + n42 + n41 - 2*n42*n41;
// XOR2X1
poly f3 = -m03 + n55 + n54 - 2*n55*n54;
// XOR2X1
poly f4 = -m04 + n74 + n73 - 2*n74*n73;
// XOR2X1
poly f5 = -m05 + n99 + n98 - 2*n99*n98;
// XOR2X1
poly f6 = -m06 + n130 + n129 - 2*n130*n129;
// XOR2X1
poly f7 = -m07 + n167 + n166 - 2*n167*n166;
// XOR2X1
poly f8 = -m08 + n206 + n169 - 2*n206*n169;
// XOR2X1
poly f9 = -m09 + n243 + n210 - 2*n243*n210;
// XOR2X1
poly f10 = -m10 + n276 + n247 - 2*n276*n247;
// XOR2X1
poly f11 = -m11 + n303 + n280 - 2*n303*n280;
// XOR2X1
poly f12 = -m12 + n324 + n307 - 2*n324*n307;
// XOR2X1
poly f13 = -m13 + n339 + n328 - 2*n339*n328;
// XOR2X1
poly f14 = -m14 + n348 + n343 - 2*n348*n343;
// OR2X1
poly f15 = -m15 + n351 + n350 - n351*n350;
// AND2X1
poly f16 = -n350 + n347*n346;
// AND2X1
poly f17 = -n351 + n348*n343;
// OR2X1
poly f18 = -n343 + n342 + n341 - n342*n341;
// AND2X1
poly f19 = -n341 + n338*n337;
// AND2X1
poly f20 = -n342 + n339*n328;
// XOR2X1
poly f21 = -n348 + n347 + n346 - 2*n347*n346;
// OR2X1
poly f22 = -n346 + n345 + n344 - n345*n344;
// AND2X1
poly f23 = -n344 + n335*n334;
// AND2X1
poly f24 = -n345 + n336*n331;
// AND2X1
poly f25 = -n347 + b7*a7;
// OR2X1
poly f26 = -n328 + n327 + n326 - n327*n326;
// AND2X1
poly f27 = -n326 + n323*n322;
// AND2X1
poly f28 = -n327 + n324*n307;
// OR2X1
poly f29 = -n307 + n306 + n305 - n306*n305;
// AND2X1
poly f30 = -n305 + n302*n301;
// AND2X1
poly f31 = -n306 + n303*n280;
// XOR2X1
poly f32 = -n324 + n323 + n322 - 2*n323*n322;
// XOR2X1
poly f33 = -n322 + n321 + n310 - 2*n321*n310;
// AND2X1
poly f34 = -n323 + b7*a5;
// XOR2X1
poly f35 = -n339 + n338 + n337 - 2*n338*n337;
// XOR2X1
poly f36 = -n337 + n336 + n331 - 2*n336*n331;
// OR2X1
poly f37 = -n331 + n330 + n329 - n330*n329;
// AND2X1
poly f38 = -n329 + n320*n319;
// AND2X1
poly f39 = -n330 + n321*n310;
// OR2X1
poly f40 = -n310 + n309 + n308 - n309*n308;
// AND2X1
poly f41 = -n308 + n299*n298;
// AND2X1
poly f42 = -n309 + n300*n283;
// XOR2X1
poly f43 = -n321 + n320 + n319 - 2*n320*n319;
// XOR2X1
poly f44 = -n319 + n318 + n313 - 2*n318*n313;
// AND2X1
poly f45 = -n320 + b6*a6;
// XOR2X1
poly f46 = -n336 + n335 + n334 - 2*n335*n334;
// OR2X1
poly f47 = -n334 + n333 + n332 - n333*n332;
// AND2X1
poly f48 = -n332 + n317*n316;
// AND2X1
poly f49 = -n333 + n318*n313;
// OR2X1
poly f50 = -n313 + n312 + n311 - n312*n311;
// AND2X1
poly f51 = -n311 + n296*n295;
// AND2X1
poly f52 = -n312 + n297*n286;
// XOR2X1
poly f53 = -n318 + n317 + n316 - 2*n317*n316;
// OR2X1
poly f54 = -n316 + n315 + n314 - n315*n314;
// AND2X1
poly f55 = -n314 + n293*n292;
// AND2X1
poly f56 = -n315 + n294*n289;
// AND2X1
poly f57 = -n317 + b5*a7;
// AND2X1
poly f58 = -n335 + b6*a7;
// AND2X1
poly f59 = -n338 + b7*a6;
// OR2X1
poly f60 = -n280 + n279 + n278 - n279*n278;
// AND2X1
poly f61 = -n278 + n275*n274;
// AND2X1
poly f62 = -n279 + n276*n247;
// OR2X1
poly f63 = -n247 + n246 + n245 - n246*n245;
// AND2X1
poly f64 = -n245 + n242*n241;
// AND2X1
poly f65 = -n246 + n243*n210;
// OR2X1
poly f66 = -n210 + n209 + n208 - n209*n208;
// AND2X1
poly f67 = -n208 + n205*n204;
// AND2X1
poly f68 = -n209 + n206*n169;
// AND2X1
poly f69 = -n169 + n167*n166;
// XOR2X1
poly f70 = -n166 + n165 + n132 - 2*n165*n132;
// AND2X1
poly f71 = -n167 + b7*a0;
// XOR2X1
poly f72 = -n206 + n205 + n204 - 2*n205*n204;
// XOR2X1
poly f73 = -n204 + n203 + n172 - 2*n203*n172;
// AND2X1
poly f74 = -n205 + b7*a1;
// XOR2X1
poly f75 = -n243 + n242 + n241 - 2*n242*n241;
// XOR2X1
poly f76 = -n241 + n240 + n213 - 2*n240*n213;
// AND2X1
poly f77 = -n242 + b7*a2;
// XOR2X1
poly f78 = -n276 + n275 + n274 - 2*n275*n274;
// XOR2X1
poly f79 = -n274 + n273 + n250 - 2*n273*n250;
// AND2X1
poly f80 = -n275 + b7*a3;
// XOR2X1
poly f81 = -n303 + n302 + n301 - 2*n302*n301;
// XOR2X1
poly f82 = -n301 + n300 + n283 - 2*n300*n283;
// OR2X1
poly f83 = -n283 + n282 + n281 - n282*n281;
// AND2X1
poly f84 = -n281 + n272*n271;
// AND2X1
poly f85 = -n282 + n273*n250;
// OR2X1
poly f86 = -n250 + n249 + n248 - n249*n248;
// AND2X1
poly f87 = -n248 + n239*n238;
// AND2X1
poly f88 = -n249 + n240*n213;
// OR2X1
poly f89 = -n213 + n212 + n211 - n212*n211;
// AND2X1
poly f90 = -n211 + n202*n201;
// AND2X1
poly f91 = -n212 + n203*n172;
// OR2X1
poly f92 = -n172 + n171 + n170 - n171*n170;
// AND2X1
poly f93 = -n170 + n164*n163;
// AND2X1
poly f94 = -n171 + n165*n132;
// AND2X1
poly f95 = -n132 + n130*n129;
// XOR2X1
poly f96 = -n129 + n128 + n101 - 2*n128*n101;
// AND2X1
poly f97 = -n130 + b6*a0;
// XOR2X1
poly f98 = -n165 + n164 + n163 - 2*n164*n163;
// XOR2X1
poly f99 = -n163 + n162 + n135 - 2*n162*n135;
// AND2X1
poly f100 = -n164 + b6*a1;
// XOR2X1
poly f101 = -n203 + n202 + n201 - 2*n202*n201;
// XOR2X1
poly f102 = -n201 + n200 + n175 - 2*n200*n175;
// AND2X1
poly f103 = -n202 + b6*a2;
// XOR2X1
poly f104 = -n240 + n239 + n238 - 2*n239*n238;
// XOR2X1
poly f105 = -n238 + n237 + n216 - 2*n237*n216;
// AND2X1
poly f106 = -n239 + b6*a3;
// XOR2X1
poly f107 = -n273 + n272 + n271 - 2*n272*n271;
// XOR2X1
poly f108 = -n271 + n270 + n253 - 2*n270*n253;
// AND2X1
poly f109 = -n272 + b6*a4;
// XOR2X1
poly f110 = -n300 + n299 + n298 - 2*n299*n298;
// XOR2X1
poly f111 = -n298 + n297 + n286 - 2*n297*n286;
// OR2X1
poly f112 = -n286 + n285 + n284 - n285*n284;
// AND2X1
poly f113 = -n284 + n269*n268;
// AND2X1
poly f114 = -n285 + n270*n253;
// OR2X1
poly f115 = -n253 + n252 + n251 - n252*n251;
// AND2X1
poly f116 = -n251 + n236*n235;
// AND2X1
poly f117 = -n252 + n237*n216;
// OR2X1
poly f118 = -n216 + n215 + n214 - n215*n214;
// AND2X1
poly f119 = -n214 + n199*n198;
// AND2X1
poly f120 = -n215 + n200*n175;
// OR2X1
poly f121 = -n175 + n174 + n173 - n174*n173;
// AND2X1
poly f122 = -n173 + n161*n160;
// AND2X1
poly f123 = -n174 + n162*n135;
// OR2X1
poly f124 = -n135 + n134 + n133 - n134*n133;
// AND2X1
poly f125 = -n133 + n127*n126;
// AND2X1
poly f126 = -n134 + n128*n101;
// AND2X1
poly f127 = -n101 + n99*n98;
// XOR2X1
poly f128 = -n98 + n97 + n76 - 2*n97*n76;
// AND2X1
poly f129 = -n99 + b5*a0;
// XOR2X1
poly f130 = -n128 + n127 + n126 - 2*n127*n126;
// XOR2X1
poly f131 = -n126 + n125 + n104 - 2*n125*n104;
// AND2X1
poly f132 = -n127 + b5*a1;
// XOR2X1
poly f133 = -n162 + n161 + n160 - 2*n161*n160;
// XOR2X1
poly f134 = -n160 + n159 + n138 - 2*n159*n138;
// AND2X1
poly f135 = -n161 + b5*a2;
// XOR2X1
poly f136 = -n200 + n199 + n198 - 2*n199*n198;
// XOR2X1
poly f137 = -n198 + n197 + n178 - 2*n197*n178;
// AND2X1
poly f138 = -n199 + b5*a3;
// XOR2X1
poly f139 = -n237 + n236 + n235 - 2*n236*n235;
// XOR2X1
poly f140 = -n235 + n234 + n219 - 2*n234*n219;
// AND2X1
poly f141 = -n236 + b5*a4;
// XOR2X1
poly f142 = -n270 + n269 + n268 - 2*n269*n268;
// XOR2X1
poly f143 = -n268 + n267 + n256 - 2*n267*n256;
// AND2X1
poly f144 = -n269 + b5*a5;
// XOR2X1
poly f145 = -n297 + n296 + n295 - 2*n296*n295;
// XOR2X1
poly f146 = -n295 + n294 + n289 - 2*n294*n289;
// OR2X1
poly f147 = -n289 + n288 + n287 - n288*n287;
// AND2X1
poly f148 = -n287 + n266*n265;
// AND2X1
poly f149 = -n288 + n267*n256;
// OR2X1
poly f150 = -n256 + n255 + n254 - n255*n254;
// AND2X1
poly f151 = -n254 + n233*n232;
// AND2X1
poly f152 = -n255 + n234*n219;
// OR2X1
poly f153 = -n219 + n218 + n217 - n218*n217;
// AND2X1
poly f154 = -n217 + n196*n195;
// AND2X1
poly f155 = -n218 + n197*n178;
// OR2X1
poly f156 = -n178 + n177 + n176 - n177*n176;
// AND2X1
poly f157 = -n176 + n158*n157;
// AND2X1
poly f158 = -n177 + n159*n138;
// OR2X1
poly f159 = -n138 + n137 + n136 - n137*n136;
// AND2X1
poly f160 = -n136 + n124*n123;
// AND2X1
poly f161 = -n137 + n125*n104;
// OR2X1
poly f162 = -n104 + n103 + n102 - n103*n102;
// AND2X1
poly f163 = -n102 + n96*n95;
// AND2X1
poly f164 = -n103 + n97*n76;
// AND2X1
poly f165 = -n76 + n74*n73;
// XOR2X1
poly f166 = -n73 + n72 + n57 - 2*n72*n57;
// AND2X1
poly f167 = -n74 + b4*a0;
// XOR2X1
poly f168 = -n97 + n96 + n95 - 2*n96*n95;
// XOR2X1
poly f169 = -n95 + n94 + n79 - 2*n94*n79;
// AND2X1
poly f170 = -n96 + b4*a1;
// XOR2X1
poly f171 = -n125 + n124 + n123 - 2*n124*n123;
// XOR2X1
poly f172 = -n123 + n122 + n107 - 2*n122*n107;
// AND2X1
poly f173 = -n124 + b4*a2;
// XOR2X1
poly f174 = -n159 + n158 + n157 - 2*n158*n157;
// XOR2X1
poly f175 = -n157 + n156 + n141 - 2*n156*n141;
// AND2X1
poly f176 = -n158 + b4*a3;
// XOR2X1
poly f177 = -n197 + n196 + n195 - 2*n196*n195;
// XOR2X1
poly f178 = -n195 + n194 + n181 - 2*n194*n181;
// AND2X1
poly f179 = -n196 + b4*a4;
// XOR2X1
poly f180 = -n234 + n233 + n232 - 2*n233*n232;
// XOR2X1
poly f181 = -n232 + n231 + n222 - 2*n231*n222;
// AND2X1
poly f182 = -n233 + b4*a5;
// XOR2X1
poly f183 = -n267 + n266 + n265 - 2*n266*n265;
// XOR2X1
poly f184 = -n265 + n264 + n259 - 2*n264*n259;
// AND2X1
poly f185 = -n266 + b4*a6;
// XOR2X1
poly f186 = -n294 + n293 + n292 - 2*n293*n292;
// OR2X1
poly f187 = -n292 + n291 + n290 - n291*n290;
// AND2X1
poly f188 = -n290 + n263*n262;
// AND2X1
poly f189 = -n291 + n264*n259;
// OR2X1
poly f190 = -n259 + n258 + n257 - n258*n257;
// AND2X1
poly f191 = -n257 + n230*n229;
// AND2X1
poly f192 = -n258 + n231*n222;
// OR2X1
poly f193 = -n222 + n221 + n220 - n221*n220;
// AND2X1
poly f194 = -n220 + n193*n192;
// AND2X1
poly f195 = -n221 + n194*n181;
// OR2X1
poly f196 = -n181 + n180 + n179 - n180*n179;
// AND2X1
poly f197 = -n179 + n155*n154;
// AND2X1
poly f198 = -n180 + n156*n141;
// OR2X1
poly f199 = -n141 + n140 + n139 - n140*n139;
// AND2X1
poly f200 = -n139 + n121*n120;
// AND2X1
poly f201 = -n140 + n122*n107;
// OR2X1
poly f202 = -n107 + n106 + n105 - n106*n105;
// AND2X1
poly f203 = -n105 + n93*n92;
// AND2X1
poly f204 = -n106 + n94*n79;
// OR2X1
poly f205 = -n79 + n78 + n77 - n78*n77;
// AND2X1
poly f206 = -n77 + n71*n70;
// AND2X1
poly f207 = -n78 + n72*n57;
// AND2X1
poly f208 = -n57 + n55*n54;
// XOR2X1
poly f209 = -n54 + n53 + n44 - 2*n53*n44;
// AND2X1
poly f210 = -n55 + b3*a0;
// XOR2X1
poly f211 = -n72 + n71 + n70 - 2*n71*n70;
// XOR2X1
poly f212 = -n70 + n69 + n60 - 2*n69*n60;
// AND2X1
poly f213 = -n71 + b3*a1;
// XOR2X1
poly f214 = -n94 + n93 + n92 - 2*n93*n92;
// XOR2X1
poly f215 = -n92 + n91 + n82 - 2*n91*n82;
// AND2X1
poly f216 = -n93 + b3*a2;
// XOR2X1
poly f217 = -n122 + n121 + n120 - 2*n121*n120;
// XOR2X1
poly f218 = -n120 + n119 + n110 - 2*n119*n110;
// AND2X1
poly f219 = -n121 + b3*a3;
// XOR2X1
poly f220 = -n156 + n155 + n154 - 2*n155*n154;
// XOR2X1
poly f221 = -n154 + n153 + n144 - 2*n153*n144;
// AND2X1
poly f222 = -n155 + b3*a4;
// XOR2X1
poly f223 = -n194 + n193 + n192 - 2*n193*n192;
// XOR2X1
poly f224 = -n192 + n191 + n184 - 2*n191*n184;
// AND2X1
poly f225 = -n193 + b3*a5;
// XOR2X1
poly f226 = -n231 + n230 + n229 - 2*n230*n229;
// XOR2X1
poly f227 = -n229 + n228 + n225 - 2*n228*n225;
// AND2X1
poly f228 = -n230 + b3*a6;
// XOR2X1
poly f229 = -n264 + n263 + n262 - 2*n263*n262;
// OR2X1
poly f230 = -n262 + n261 + n260 - n261*n260;
// AND2X1
poly f231 = -n260 + n227*n226;
// AND2X1
poly f232 = -n261 + n228*n225;
// OR2X1
poly f233 = -n225 + n224 + n223 - n224*n223;
// AND2X1
poly f234 = -n223 + n190*n189;
// AND2X1
poly f235 = -n224 + n191*n184;
// OR2X1
poly f236 = -n184 + n183 + n182 - n183*n182;
// AND2X1
poly f237 = -n182 + n152*n151;
// AND2X1
poly f238 = -n183 + n153*n144;
// OR2X1
poly f239 = -n144 + n143 + n142 - n143*n142;
// AND2X1
poly f240 = -n142 + n118*n117;
// AND2X1
poly f241 = -n143 + n119*n110;
// OR2X1
poly f242 = -n110 + n109 + n108 - n109*n108;
// AND2X1
poly f243 = -n108 + n90*n89;
// AND2X1
poly f244 = -n109 + n91*n82;
// OR2X1
poly f245 = -n82 + n81 + n80 - n81*n80;
// AND2X1
poly f246 = -n80 + n68*n67;
// AND2X1
poly f247 = -n81 + n69*n60;
// OR2X1
poly f248 = -n60 + n59 + n58 - n59*n58;
// AND2X1
poly f249 = -n58 + n52*n51;
// AND2X1
poly f250 = -n59 + n53*n44;
// AND2X1
poly f251 = -n44 + n42*n41;
// XOR2X1
poly f252 = -n41 + n40 + n37 - 2*n40*n37;
// AND2X1
poly f253 = -n42 + b2*a0;
// XOR2X1
poly f254 = -n53 + n52 + n51 - 2*n52*n51;
// XOR2X1
poly f255 = -n51 + n50 + n47 - 2*n50*n47;
// AND2X1
poly f256 = -n52 + b2*a1;
// XOR2X1
poly f257 = -n69 + n68 + n67 - 2*n68*n67;
// XOR2X1
poly f258 = -n67 + n66 + n63 - 2*n66*n63;
// AND2X1
poly f259 = -n68 + b2*a2;
// XOR2X1
poly f260 = -n91 + n90 + n89 - 2*n90*n89;
// XOR2X1
poly f261 = -n89 + n88 + n85 - 2*n88*n85;
// AND2X1
poly f262 = -n90 + b2*a3;
// XOR2X1
poly f263 = -n119 + n118 + n117 - 2*n118*n117;
// XOR2X1
poly f264 = -n117 + n116 + n113 - 2*n116*n113;
// AND2X1
poly f265 = -n118 + b2*a4;
// XOR2X1
poly f266 = -n153 + n152 + n151 - 2*n152*n151;
// XOR2X1
poly f267 = -n151 + n150 + n147 - 2*n150*n147;
// AND2X1
poly f268 = -n152 + b2*a5;
// XOR2X1
poly f269 = -n191 + n190 + n189 - 2*n190*n189;
// XOR2X1
poly f270 = -n189 + n188 + n187 - 2*n188*n187;
// AND2X1
poly f271 = -n190 + b2*a6;
// XOR2X1
poly f272 = -n228 + n227 + n226 - 2*n227*n226;
// AND2X1
poly f273 = -n226 + n188*n187;
// OR2X1
poly f274 = -n187 + n186 + n185 - n186*n185;
// AND2X1
poly f275 = -n185 + n149*n148;
// AND2X1
poly f276 = -n186 + n150*n147;
// OR2X1
poly f277 = -n147 + n146 + n145 - n146*n145;
// AND2X1
poly f278 = -n145 + n115*n114;
// AND2X1
poly f279 = -n146 + n116*n113;
// OR2X1
poly f280 = -n113 + n112 + n111 - n112*n111;
// AND2X1
poly f281 = -n111 + n87*n86;
// AND2X1
poly f282 = -n112 + n88*n85;
// OR2X1
poly f283 = -n85 + n84 + n83 - n84*n83;
// AND2X1
poly f284 = -n83 + n65*n64;
// AND2X1
poly f285 = -n84 + n66*n63;
// OR2X1
poly f286 = -n63 + n62 + n61 - n62*n61;
// AND2X1
poly f287 = -n61 + n49*n48;
// AND2X1
poly f288 = -n62 + n50*n47;
// OR2X1
poly f289 = -n47 + n46 + n45 - n46*n45;
// AND2X1
poly f290 = -n45 + n39*n38;
// AND2X1
poly f291 = -n46 + n40*n37;
// AND2X1
poly f292 = -n37 + n35*n34;
// AND2X1
poly f293 = -n34 + b0*a1;
// AND2X1
poly f294 = -n35 + b1*a0;
// XOR2X1
poly f295 = -n40 + n39 + n38 - 2*n39*n38;
// AND2X1
poly f296 = -n38 + b0*a2;
// AND2X1
poly f297 = -n39 + b1*a1;
// XOR2X1
poly f298 = -n50 + n49 + n48 - 2*n49*n48;
// AND2X1
poly f299 = -n48 + b0*a3;
// AND2X1
poly f300 = -n49 + b1*a2;
// XOR2X1
poly f301 = -n66 + n65 + n64 - 2*n65*n64;
// AND2X1
poly f302 = -n64 + b0*a4;
// AND2X1
poly f303 = -n65 + b1*a3;
// XOR2X1
poly f304 = -n88 + n87 + n86 - 2*n87*n86;
// AND2X1
poly f305 = -n86 + b0*a5;
// AND2X1
poly f306 = -n87 + b1*a4;
// XOR2X1
poly f307 = -n116 + n115 + n114 - 2*n115*n114;
// AND2X1
poly f308 = -n114 + b0*a6;
// AND2X1
poly f309 = -n115 + b1*a5;
// XOR2X1
poly f310 = -n150 + n149 + n148 - 2*n149*n148;
// AND2X1
poly f311 = -n148 + b0*a7;
// AND2X1
poly f312 = -n149 + b1*a6;
// AND2X1
poly f313 = -n188 + b1*a7;
// AND2X1
poly f314 = -n227 + b2*a7;
// AND2X1
poly f315 = -n263 + b3*a7;
// AND2X1
poly f316 = -n293 + b4*a7;
// AND2X1
poly f317 = -n296 + b5*a6;
// AND2X1
poly f318 = -n299 + b6*a5;
// AND2X1
poly f319 = -n302 + b7*a4;
// INPUT
poly fa0 = a0^2 - a0;
// INPUT
poly fa1 = a1^2 - a1;
// INPUT
poly fa2 = a2^2 - a2;
// INPUT
poly fa3 = a3^2 - a3;
// INPUT
poly fa4 = a4^2 - a4;
// INPUT
poly fa5 = a5^2 - a5;
// INPUT
poly fa6 = a6^2 - a6;
// INPUT
poly fa7 = a7^2 - a7;
// INPUT
poly fb0 = b0^2 - b0;
// INPUT
poly fb1 = b1^2 - b1;
// INPUT
poly fb2 = b2^2 - b2;
// INPUT
poly fb3 = b3^2 - b3;
// INPUT
poly fb4 = b4^2 - b4;
// INPUT
poly fb5 = b5^2 - b5;
// INPUT
poly fb6 = b6^2 - b6;
// INPUT
poly fb7 = b7^2 - b7;
ideal J = (fZ, fA, fB, f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54, f55, f56, f57, f58, f59, f60, f61, f62, f63, f64, f65, f66, f67, f68, f69, f70, f71, f72, f73, f74, f75, f76, f77, f78, f79, f80, f81, f82, f83, f84, f85, f86, f87, f88, f89, f90, f91, f92, f93, f94, f95, f96, f97, f98, f99, f100, f101, f102, f103, f104, f105, f106, f107, f108, f109, f110, f111, f112, f113, f114, f115, f116, f117, f118, f119, f120, f121, f122, f123, f124, f125, f126, f127, f128, f129, f130, f131, f132, f133, f134, f135, f136, f137, f138, f139, f140, f141, f142, f143, f144, f145, f146, f147, f148, f149, f150, f151, f152, f153, f154, f155, f156, f157, f158, f159, f160, f161, f162, f163, f164, f165, f166, f167, f168, f169, f170, f171, f172, f173, f174, f175, f176, f177, f178, f179, f180, f181, f182, f183, f184, f185, f186, f187, f188, f189, f190, f191, f192, f193, f194, f195, f196, f197, f198, f199, f200, f201, f202, f203, f204, f205, f206, f207, f208, f209, f210, f211, f212, f213, f214, f215, f216, f217, f218, f219, f220, f221, f222, f223, f224, f225, f226, f227, f228, f229, f230, f231, f232, f233, f234, f235, f236, f237, f238, f239, f240, f241, f242, f243, f244, f245, f246, f247, f248, f249, f250, f251, f252, f253, f254, f255, f256, f257, f258, f259, f260, f261, f262, f263, f264, f265, f266, f267, f268, f269, f270, f271, f272, f273, f274, f275, f276, f277, f278, f279, f280, f281, f282, f283, f284, f285, f286, f287, f288, f289, f290, f291, f292, f293, f294, f295, f296, f297, f298, f299, f300, f301, f302, f303, f304, f305, f306, f307, f308, f309, f310, f311, f312, f313, f314, f315, f316, f317, f318, f319);
ideal J0 = (a0^2 - a0, n38^2 - n38, n39^2 - n39, n290^2 - n290, n319^2 - n319, n34^2 - n34, n35^2 - n35, n37^2 - n37, n348^2 - n348, n303^2 - n303, n341^2 - n341, n338^2 - n338, n343^2 - n343, n342^2 - n342, n345^2 - n345, n332^2 - n332, n347^2 - n347, n314^2 - n314, n132^2 - n132, n133^2 - n133, n130^2 - n130, n229^2 - n229, n136^2 - n136, n137^2 - n137, n134^2 - n134, n135^2 - n135, n222^2 - n222, n208^2 - n208, n138^2 - n138, n139^2 - n139, n226^2 - n226, n227^2 - n227, n224^2 - n224, n209^2 - n209, n235^2 - n235, n234^2 - n234, n237^2 - n237, n299^2 - n299, n236^2 - n236, n327^2 - n327, n316^2 - n316, n326^2 - n326, n231^2 - n231, n333^2 - n333, n230^2 - n230, n85^2 - n85, n84^2 - n84, n87^2 - n87, n86^2 - n86, n81^2 - n81, n80^2 - n80, n83^2 - n83, n82^2 - n82, n200^2 - n200, n232^2 - n232, n89^2 - n89, n88^2 - n88, n320^2 - n320, n201^2 - n201, n271^2 - n271, n296^2 - n296, n129^2 - n129, n128^2 - n128, n125^2 - n125, n124^2 - n124, n127^2 - n127, n126^2 - n126, n121^2 - n121, n120^2 - n120, n123^2 - n123, n122^2 - n122, n279^2 - n279, n239^2 - n239, n238^2 - n238, b4^2 - b4, b5^2 - b5, b6^2 - b6, b7^2 - b7, b0^2 - b0, b1^2 - b1, b2^2 - b2, b3^2 - b3, n211^2 - n211, n312^2 - n312, n307^2 - n307, n278^2 - n278, n240^2 - n240, n241^2 - n241, n98^2 - n98, n99^2 - n99, n245^2 - n245, n246^2 - n246, n247^2 - n247, n92^2 - n92, n93^2 - n93, n90^2 - n90, n91^2 - n91, n96^2 - n96, n97^2 - n97, n94^2 - n94, n95^2 - n95, n158^2 - n158, n159^2 - n159, a6^2 - a6, n329^2 - n329, n328^2 - n328, n150^2 - n150, n151^2 - n151, n152^2 - n152, n153^2 - n153, n154^2 - n154, n155^2 - n155, n156^2 - n156, n157^2 - n157, n67^2 - n67, n66^2 - n66, n65^2 - n65, n64^2 - n64, n63^2 - n63, n62^2 - n62, n61^2 - n61, n60^2 - n60, n350^2 - n350, n291^2 - n291, n69^2 - n69, n68^2 - n68, n322^2 - n322, n302^2 - n302, n306^2 - n306, n301^2 - n301, n335^2 - n335, n249^2 - n249, n336^2 - n336, n300^2 - n300, n253^2 - n253, n252^2 - n252, n251^2 - n251, n250^2 - n250, n257^2 - n257, n256^2 - n256, n255^2 - n255, n254^2 - n254, n330^2 - n330, n259^2 - n259, n258^2 - n258, n317^2 - n317, n233^2 - n233, n331^2 - n331, n318^2 - n318, n149^2 - n149, n148^2 - n148, n308^2 - n308, n143^2 - n143, n142^2 - n142, n141^2 - n141, n140^2 - n140, n147^2 - n147, n146^2 - n146, n145^2 - n145, n144^2 - n144, n74^2 - n74, n76^2 - n76, n77^2 - n77, n70^2 - n70, n71^2 - n71, n72^2 - n72, n73^2 - n73, n309^2 - n309, n339^2 - n339, n78^2 - n78, n79^2 - n79, n263^2 - n263, m11^2 - m11, m10^2 - m10, m13^2 - m13, m12^2 - m12, m15^2 - m15, n260^2 - n260, n261^2 - n261, n176^2 - n176, n177^2 - n177, n174^2 - n174, n175^2 - n175, n172^2 - n172, n173^2 - n173, n170^2 - n170, n171^2 - n171, n266^2 - n266, n267^2 - n267, n264^2 - n264, n265^2 - n265, n262^2 - n262, n228^2 - n228, n178^2 - n178, n179^2 - n179, n248^2 - n248, m14^2 - m14, n344^2 - n344, a2^2 - a2, n49^2 - n49, n48^2 - n48, n286^2 - n286, n287^2 - n287, n280^2 - n280, n281^2 - n281, n282^2 - n282, n283^2 - n283, n41^2 - n41, n40^2 - n40, n42^2 - n42, n45^2 - n45, n44^2 - n44, n47^2 - n47, n46^2 - n46, m06^2 - m06, m07^2 - m07, m04^2 - m04, m05^2 - m05, m02^2 - m02, m03^2 - m03, m00^2 - m00, m01^2 - m01, n298^2 - n298, n220^2 - n220, m08^2 - m08, m09^2 - m09, n161^2 - n161, n160^2 - n160, n163^2 - n163, n162^2 - n162, n165^2 - n165, n164^2 - n164, n167^2 - n167, n166^2 - n166, n169^2 - n169, n270^2 - n270, n273^2 - n273, n272^2 - n272, n275^2 - n275, n274^2 - n274, n276^2 - n276, n324^2 - n324, n346^2 - n346, n225^2 - n225, n315^2 - n315, n297^2 - n297, n284^2 - n284, n295^2 - n295, n294^2 - n294, n293^2 - n293, n292^2 - n292, n58^2 - n58, n59^2 - n59, n57^2 - n57, n54^2 - n54, n55^2 - n55, n52^2 - n52, n53^2 - n53, n50^2 - n50, n51^2 - n51, n323^2 - n323, n223^2 - n223, n305^2 - n305, n351^2 - n351, n337^2 - n337, n268^2 - n268, n198^2 - n198, n199^2 - n199, n194^2 - n194, n195^2 - n195, n196^2 - n196, n197^2 - n197, n190^2 - n190, n191^2 - n191, n192^2 - n192, n193^2 - n193, n114^2 - n114, n115^2 - n115, n116^2 - n116, n117^2 - n117, n110^2 - n110, n111^2 - n111, n112^2 - n112, n113^2 - n113, n204^2 - n204, n205^2 - n205, n206^2 - n206, n118^2 - n118, n119^2 - n119, n202^2 - n202, n203^2 - n203, n311^2 - n311, n269^2 - n269, n219^2 - n219, n288^2 - n288, n242^2 - n242, n285^2 - n285, n289^2 - n289, a1^2 - a1, n221^2 - n221, a3^2 - a3, n243^2 - n243, a5^2 - a5, a4^2 - a4, a7^2 - a7, n313^2 - n313, n321^2 - n321, n310^2 - n310, n214^2 - n214, n334^2 - n334, n189^2 - n189, n188^2 - n188, n187^2 - n187, n186^2 - n186, n185^2 - n185, n184^2 - n184, n183^2 - n183, n182^2 - n182, n181^2 - n181, n180^2 - n180, n107^2 - n107, n106^2 - n106, n105^2 - n105, n104^2 - n104, n103^2 - n103, n102^2 - n102, n101^2 - n101, n218^2 - n218, n217^2 - n217, n216^2 - n216, n215^2 - n215, n210^2 - n210, n213^2 - n213, n212^2 - n212, n109^2 - n109, n108^2 - n108);
poly f_spec =Z-A*B;
reduce(f_spec, J + J0);
